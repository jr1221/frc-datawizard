/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.jr12221.frcdatawizard;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author jack
 */
public class ResultsUI extends javax.swing.JFrame {

    private TableModel modelTab;

    /**
     * Creates new form ResultsUI
     *
     * @param lastMod
     * @param modelTab2
     */
    public ResultsUI(String lastMod, TableModel modelTab2) {
        modelTab = modelTab2;
        initComponents();
        lastModTextField.grabFocus();
        lastModTextField.setText("This data was last modified on " + lastMod);

        TableRowSorter sorter = new TableRowSorter<>(modelTab);
        dataTableComplete.setRowSorter(sorter);
        searchTextField.getDocument()
                .addDocumentListener(new DocumentListener() {
                    @Override
                    public void insertUpdate(DocumentEvent e
                    ) {
                        search(searchTextField.getText());
                    }

                    @Override
                    public void removeUpdate(DocumentEvent e
                    ) {
                        search(searchTextField.getText());
                    }

                    @Override
                    public void changedUpdate(DocumentEvent e
                    ) {
                        search(searchTextField.getText());
                    }

                    public void search(String str) {
                        if (str.length() == 0) {
                            sorter.setRowFilter(null);
                        } else {
                            sorter.setRowFilter(RowFilter.regexFilter("(?i)" + str));
                            dataTableComplete.getUpdateSelectionOnSort();
                        }
                    }
                }
                );
        dataTableComplete.getColumnModel().getColumn(0).setCellRenderer(new StatusColumnCellRenderer());
        dataTableComplete.getColumnModel().getColumn(1).setCellRenderer(new StatusColumnCellRenderer());

        dataTableComplete.updateUI();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        searchTextField = new HintJObject("Type Search Term Here");
        lastModTextField = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        dataTableComplete = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Data Viewer For FRC-Datawizard");
        setAutoRequestFocus(false);
        setFont(new java.awt.Font("FreeSans", 0, 24)); // NOI18N

        searchTextField.setColumns(15);
        searchTextField.setFont(new java.awt.Font("FreeSans", 0, 28)); // NOI18N
        searchTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        lastModTextField.setEditable(false);
        lastModTextField.setFont(new java.awt.Font("FreeSans", 0, 18)); // NOI18N
        lastModTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        lastModTextField.setText("jTextField1");

        dataTableComplete.setFont(new java.awt.Font("FreeSans", 0, 26)); // NOI18N
        dataTableComplete.setModel(modelTab);
        dataTableComplete.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_ALL_COLUMNS);
        dataTableComplete.setEnabled(false);
        dataTableComplete.setRowHeight(54);
        dataTableComplete.setRowSelectionAllowed(false);
        dataTableComplete.getTableHeader().setResizingAllowed(false);
        dataTableComplete.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(dataTableComplete);
        dataTableComplete.getTableHeader().setEnabled(false);
        dataTableComplete.getTableHeader().setVisible(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lastModTextField)
                    .addComponent(searchTextField)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 913, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 874, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(lastModTextField, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ResultsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ResultsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ResultsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResultsUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new ResultsUI(null, null).setVisible(true);
        });
    }

    class StatusColumnCellRenderer extends DefaultTableCellRenderer {

        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int col) {

            //Cells are by default rendered as a JLabel.
            JLabel l = (JLabel) super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, col);

            //Get the status for the current row.
            if (dataTableComplete.getModel().getValueAt(dataTableComplete.convertRowIndexToModel(row), col).equals(" ")) {
                l.setBackground(Color.DARK_GRAY);
                dataTableComplete.setRowHeight(row, 7);
            } else {
                l.setBackground(dataTableComplete.getBackground());
            }

            //Return the JLabel which renders the cell.
            return l;

        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable dataTableComplete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lastModTextField;
    private javax.swing.JTextField searchTextField;
    // End of variables declaration//GEN-END:variables

}
